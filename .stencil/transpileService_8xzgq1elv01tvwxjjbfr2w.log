{"moduleFile":{"sourceFilePath":"/Users/david/Projects/davidenke/carage/src/components/edit-text/edit-text.tsx","jsFilePath":"/Users/david/Projects/davidenke/carage/src/components/edit-text/edit-text.js","cmps":[{"isLegacy":false,"tagName":"carage-edit-text","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"EditText","elementRef":null,"encapsulation":"shadow","properties":[{"name":"value","type":"string","attribute":"value","reflect":true,"mutable":false,"required":false,"optional":false,"complexType":{"original":"string","resolved":"string","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"multiline","type":"boolean","attribute":"multiline","reflect":true,"mutable":false,"required":false,"optional":false,"defaultValue":"false","complexType":{"original":"boolean","resolved":"boolean","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"disabled","type":"boolean","attribute":"disabled","reflect":true,"mutable":false,"required":false,"optional":false,"defaultValue":"false","complexType":{"original":"boolean","resolved":"boolean","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"required","type":"boolean","attribute":"required","reflect":true,"mutable":false,"required":false,"optional":false,"defaultValue":"false","complexType":{"original":"boolean","resolved":"boolean","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"errored","type":"boolean","attribute":"errored","reflect":true,"mutable":false,"required":false,"optional":false,"defaultValue":"false","complexType":{"original":"boolean","resolved":"boolean","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"placeholder","type":"string","attribute":"placeholder","reflect":true,"mutable":false,"required":false,"optional":false,"defaultValue":"''","complexType":{"original":"string","resolved":"string","references":{}},"docs":{"tags":[],"text":""},"internal":false}],"virtualProperties":[],"states":[],"methods":[],"listeners":[],"events":[{"name":"inputChange","method":"inputChange","bubbles":true,"cancelable":true,"composed":true,"docs":{"tags":[],"text":""},"complexType":{"original":"string","resolved":"string","references":{}},"internal":false}],"watchers":[],"styles":[{"modeName":"$","styleId":"CARAGE-EDIT-TEXT","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/david/Projects/davidenke/carage/src/components/edit-text/edit-text.scss","relativePath":"edit-text.scss","originalComponentPath":"edit-text.scss"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/david/Projects/davidenke/carage/src/components/edit-text/edit-text.js","sourceFilePath":"/Users/david/Projects/davidenke/carage/src/components/edit-text/edit-text.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":true,"hasLifecycle":false,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":true,"hasProp":true,"hasPropNumber":false,"hasPropBoolean":true,"hasPropString":true,"hasPropMutable":false,"hasReflect":true,"hasRenderFn":true,"hasState":false,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":true,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":false,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["class","disabled","required","placeholder","onInput","type","value"],"htmlTagNames":["label","span","slot","textarea","input"],"isUpdateable":true,"potentialCmpRefs":[]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":["@stencil/core"],"potentialCmpRefs":[]},"jsText":"import { h, Host } from \"@stencil/core\";\r\nexport class EditText {\r\n    constructor() {\r\n        this.multiline = false;\r\n        this.disabled = false;\r\n        this.required = false;\r\n        this.errored = false;\r\n        this.placeholder = '';\r\n    }\r\n    handleInput(event) {\r\n        const { value } = event.target;\r\n        this.inputChange.emit(value);\r\n    }\r\n    render() {\r\n        return (h(Host, { class: {\r\n                multiline: this.multiline,\r\n                disabled: this.disabled,\r\n                errored: this.errored,\r\n                required: this.required\r\n            } },\r\n            h(\"label\", null,\r\n                h(\"span\", { class: \"label\" },\r\n                    h(\"slot\", null)),\r\n                this.multiline ? (h(\"textarea\", { class: \"input\", disabled: this.disabled, required: this.required, placeholder: this.placeholder, onInput: event => this.handleInput(event) }, this.value)) : (h(\"input\", { class: \"input\", type: \"text\", value: this.value, disabled: this.disabled, required: this.required, placeholder: this.placeholder, onInput: event => this.handleInput(event) })))));\r\n    }\r\n    static get is() { return \"carage-edit-text\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"edit-text.scss\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"edit-text.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"value\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"value\",\r\n            \"reflect\": true\r\n        },\r\n        \"multiline\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"multiline\",\r\n            \"reflect\": true,\r\n            \"defaultValue\": \"false\"\r\n        },\r\n        \"disabled\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"disabled\",\r\n            \"reflect\": true,\r\n            \"defaultValue\": \"false\"\r\n        },\r\n        \"required\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"required\",\r\n            \"reflect\": true,\r\n            \"defaultValue\": \"false\"\r\n        },\r\n        \"errored\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"errored\",\r\n            \"reflect\": true,\r\n            \"defaultValue\": \"false\"\r\n        },\r\n        \"placeholder\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"placeholder\",\r\n            \"reflect\": true,\r\n            \"defaultValue\": \"''\"\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"method\": \"inputChange\",\r\n            \"name\": \"inputChange\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            }\r\n        }]; }\r\n}\r\n"}