import { registerInstance as __stencil_registerInstance, createEvent as __stencil_createEvent } from "@stencil/core";
import { h } from "@stencil/core";
export const editText = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
        this.value = '';
        this.type = InputType.Text;
        this.multiline = false;
        this.disabled = false;
        this.required = false;
        this.errored = false;
        this.placeholder = '';
        this.inputChange = __stencil_createEvent(this, "inputChange", 7);
    }
    handleInput(event) {
        const { value } = event.target;
        this.inputChange.emit(parseInputValue(value, this.type));
    }
    render() {
        return (h(Host, { class: {
                multiline: this.multiline,
                disabled: this.disabled,
                errored: this.errored,
                required: this.required,
                [`type-${this.type}`]: true
            } }, h("label", null, h("span", { class: "label" }, h("slot", null)), this.multiline && this.type === InputType.Text ? (h("textarea", { class: "input", disabled: this.disabled, required: this.required, placeholder: this.placeholder, onInput: event => this.handleInput(event) }, stringifyInputValue(this.value))) : (h("input", { class: "input", type: this.type, value: stringifyInputValue(this.value), disabled: this.disabled, required: this.required, placeholder: this.placeholder, onInput: event => this.handleInput(event) })))));
    }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:carage-edit-text"; }
};
