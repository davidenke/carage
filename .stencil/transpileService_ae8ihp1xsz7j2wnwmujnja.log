{"moduleFile":{"sourceFilePath":"/Users/david/Projects/davidenke/carage/src/components/editor/editor.tsx","jsFilePath":"/Users/david/Projects/davidenke/carage/src/components/editor/editor.js","cmps":[{"isLegacy":false,"tagName":"carage-editor","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"Editor","elementRef":null,"encapsulation":"shadow","properties":[{"name":"model","type":"unknown","reflect":false,"mutable":false,"required":false,"optional":false,"complexType":{"original":"Model","resolved":"Model","references":{"Model":{"location":"import","path":"../../utils/model.utils"}}},"docs":{"tags":[],"text":""},"internal":false}],"virtualProperties":[],"states":[{"name":"metadata"}],"methods":[],"listeners":[],"events":[{"name":"close","method":"close","bubbles":true,"cancelable":true,"composed":true,"docs":{"tags":[],"text":""},"complexType":{"original":"void","resolved":"void","references":{}},"internal":false}],"watchers":[],"styles":[{"modeName":"$","styleId":"CARAGE-EDITOR","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/david/Projects/davidenke/carage/src/components/editor/editor.scss","relativePath":"editor.scss","originalComponentPath":"editor.scss"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/david/Projects/davidenke/carage/src/components/editor/editor.js","sourceFilePath":"/Users/david/Projects/davidenke/carage/src/components/editor/editor.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":true,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":true,"hasLifecycle":true,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":true,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":true,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":false,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["type","name","value","class","closable","onClose","expand"],"htmlTagNames":["input","carage-card","form","carage-button"],"isUpdateable":true,"potentialCmpRefs":["carage-card","carage-button"]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":["@stencil/core"],"potentialCmpRefs":[]},"jsText":"import { h } from \"@stencil/core\";\r\nexport class Editor {\r\n    constructor() {\r\n        this.metadata = [];\r\n    }\r\n    componentWillLoad() {\r\n        this.metadata = Array.from(this.model\r\n            .getMetadata()\r\n            .entries());\r\n    }\r\n    renderInput(property, type) {\r\n        console.log(property, type);\r\n        switch (type) {\r\n            default:\r\n                return (h(\"input\", { type: \"text\", name: property, value: property }));\r\n        }\r\n    }\r\n    render() {\r\n        return (h(\"carage-card\", { class: \"card\", closable: true, onClose: () => this.close.emit() },\r\n            h(\"form\", null,\r\n                this.metadata.map(([property, type]) => this.renderInput(property, type)),\r\n                h(\"carage-button\", { expand: true }, \"save\"))));\r\n    }\r\n    static get is() { return \"carage-editor\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"editor.scss\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"editor.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"model\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"Model\",\r\n                \"resolved\": \"Model\",\r\n                \"references\": {\r\n                    \"Model\": {\r\n                        \"location\": \"import\",\r\n                        \"path\": \"../../utils/model.utils\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            }\r\n        }\r\n    }; }\r\n    static get states() { return {\r\n        \"metadata\": {}\r\n    }; }\r\n    static get events() { return [{\r\n            \"method\": \"close\",\r\n            \"name\": \"close\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"void\",\r\n                \"resolved\": \"void\",\r\n                \"references\": {}\r\n            }\r\n        }]; }\r\n}\r\n"}