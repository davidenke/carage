{"moduleFile":{"sourceFilePath":"/Users/david/Projects/davidenke/carage/src/utils/model.utils.ts","jsFilePath":"/Users/david/Projects/davidenke/carage/src/utils/model.utils.js","cmps":[],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":[],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":[],"potentialCmpRefs":[]},"jsText":"const propertyTypes = new Map();\r\nconst preparePropertyTypeNamespace = (name) => {\r\n    if (!propertyTypes.has(name)) {\r\n        propertyTypes.set(name, new Map());\r\n    }\r\n    return propertyTypes.get(name);\r\n};\r\nexport class Model {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.setData(data);\r\n    }\r\n    setData(data) {\r\n        Object.assign(this, data);\r\n    }\r\n    getMetadata() {\r\n        return propertyTypes.get(this.constructor.name);\r\n    }\r\n}\r\nexport const StringType = () => ({ constructor }, propertyKey) => {\r\n    preparePropertyTypeNamespace(constructor.name)\r\n        .set(propertyKey, 'string');\r\n};\r\nexport const NumberType = () => ({ constructor }, propertyKey) => {\r\n    preparePropertyTypeNamespace(constructor.name)\r\n        .set(propertyKey, 'number');\r\n};\r\nexport const DateType = () => ({ constructor }, propertyKey) => {\r\n    preparePropertyTypeNamespace(constructor.name)\r\n        .set(propertyKey, 'date');\r\n};\r\nexport const ImageType = () => ({ constructor }, propertyKey) => {\r\n    preparePropertyTypeNamespace(constructor.name)\r\n        .set(propertyKey, 'image');\r\n};\r\n"}